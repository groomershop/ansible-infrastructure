- name: Stop builder for AMI creation
  when: aws_ami_build_stop_builder
  ec2:
    region: "{{ aws_region }}"
    state: stopped
    instance_ids: "{{ [ ami_instance_id ] }}"
    wait: yes
  register: ami_builder_instance

- name: Create AMI
  ec2_ami:
    region: "{{ aws_region }}"
    state: present
    description: "{{ ami_description }}"
    instance_id: "{{ ami_instance_id }}"
    name: "{{ ami_name }}"
    wait: yes
    wait_timeout: 1800
    tags: "{{ aws_tags_default | combine(ami_tags, ami_name_tags) }}"
    delete_snapshot: "{{ ami_delete_snapshot | default('yes') }}"
    device_mapping: >-
      {{ ( aws_ami_build_ebs_volume_type == 'gp3' ) 
          | ternary(
              [aws_ami_build_root_volume_mapping_gp3 ], 
              omit) }}
  vars:
    ami_name_tags:
      Name: "{{ ami_description }}"
      ArtifactBuildNr: "{{ mageops_artifact_build_nr | default('', true) }}"
    aws_ami_build_root_volume_mapping_gp3: 
      device_name: "{{ (ami_builder_instance.instances | first).root_device_name }}"
      volume_type: "{{ aws_ami_build_ebs_volume_type }}"
      # Warning: We use AWS defaults since the ansible module does not support gp3
      # parameters yet and even fails for `iops` because it sends it as string...
      # throughput: "{{ aws_ami_build_ebs_gp3_throughput | int }}"
      # iops: "{{ aws_ami_build_ebs_gp3_iops | int }}"
  register: ami_output

- name: Wait until AMI is accessible
  ec2_ami_info:
    region: "{{ aws_region }}"
    owner: self
    filters: "{{ aws_tags_base | prefix_keys('tag:') | combine(ami_facts_tag_filters) }}"
  vars:
    ami_facts_tag_filters: "{{ ami_tags | prefix_keys('tag:') }}"
  register: ami_facts
  until: "ami_facts.images is defined and ami_facts.images|length > 0"
  retries: 360
  delay: 5
  when: ami_output is changed

- name: Set info about built AMI
  set_fact:
    aws_create_ami_info:
      image_id: "{{ ami_output.image_id }}"
      job_name: "{{ lookup('env', 'JOB_NAME') | default(none, true) }}"
      job_nr: "{{ lookup('env', 'BUILD_NUMBER') | default(none, true) }}"
      build_nr: "{{ mageops_artifact_build_nr | default(none, true) }}"
      
- name: Save built AMI info into a file
  when: aws_ami_build_save_info_file_path | default(false, true)
  copy:
    dest: "{{ aws_ami_build_save_info_file_path }}"
    content: "{{ aws_create_ami_info | to_nice_json }}"
  delegate_to: localhost